//==========================================================================================================================
//Key is used to ensure the consistency of file version and content, and cannot be modified.
//Version Control is the version number written when the file is generated and cannot be modified.
//ToolMessage is used to record related information of any tool that has processed the file and cannot be manually modified.
//UserMessage is used by the user to write any information, which can be modified in any way.
//Content is the actual payload of the file.
//Parameter is the additional parameter information carried by the file and cannot be modified in any way.

//Key is generated by the hash of Version Control, Content and Parameter to ensure the consistency of the file.
//These three parts do not allow any individual modification
//==========================================================================================================================


//[UHDL]Key Start [md5:903694174d6090013d47e32162a0680e]
//Version Control Hash: 3accddf64b1dd03abeb9b0b3e5a7ba44
//Content Hash: 1d0e79dff24f085e1d821b1aaccb7a4c
//Parameter Hash: d41d8cd98f00b204e9800998ecf8427e
//[UHDL]Key End [md5:903694174d6090013d47e32162a0680e]

//[UHDL]Version Control Start [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]
//[UHDL]Version Control Version:1.0.1
//[UHDL]Version Control End [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]

//[UHDL]Tool Message Start [md5:b11b3cdd5065bea6af5d376daf92b17c]
//Written by UHDL in 2023-07-14 09:39:39
//[UHDL]Tool Message End [md5:b11b3cdd5065bea6af5d376daf92b17c]

//[UHDL]User Message Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]User Message End [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Content Start [md5:1d0e79dff24f085e1d821b1aaccb7a4c]
module RegSpaceAPB_cfg_reg_bank_C (
	input             clk                ,
	input             rst_n              ,
	input      [31:0] p_addr             ,
	input      [2:0]  p_prot             ,
	input             p_sel              ,
	input             p_enable           ,
	input             p_write            ,
	input      [31:0] p_wdata            ,
	input      [3:0]  p_strb             ,
	output            p_ready            ,
	output     [31:0] p_rdata            ,
	output            p_slverr           ,
	input             rs_reg0_field1_wdat,
	input             rs_reg0_field1_wvld,
	output            rs_reg0_field1_wrdy,
	output            rs_reg0_field1_rdat,
	output            rs_reg0_field1_rvld,
	input             rs_reg0_field1_rrdy,
	input      [1:0]  rs_reg0_field2_wdat,
	input             rs_reg0_field2_wvld,
	output            rs_reg0_field2_wrdy,
	output     [1:0]  rs_reg0_field2_rdat,
	output            rs_reg0_field2_rvld,
	input             rs_reg0_field2_rrdy,
	input      [2:0]  rs_reg0_field3_wdat,
	input             rs_reg0_field3_wvld,
	output            rs_reg0_field3_wrdy,
	output     [2:0]  rs_reg0_field3_rdat,
	output            rs_reg0_field3_rvld,
	input             rs_reg0_field3_rrdy,
	input      [3:0]  rs_reg0_field4_wdat,
	input             rs_reg0_field4_wvld,
	output            rs_reg0_field4_wrdy,
	output     [3:0]  rs_reg0_field4_rdat,
	output            rs_reg0_field4_rvld,
	input             rs_reg0_field4_rrdy,
	input             rs_reg1_field1_wdat,
	input             rs_reg1_field1_wvld,
	output            rs_reg1_field1_wrdy,
	output            rs_reg1_field1_rdat,
	output            rs_reg1_field1_rvld,
	input             rs_reg1_field1_rrdy,
	input      [1:0]  rs_reg1_field2_wdat,
	input             rs_reg1_field2_wvld,
	output            rs_reg1_field2_wrdy,
	output     [1:0]  rs_reg1_field2_rdat,
	output            rs_reg1_field2_rvld,
	input             rs_reg1_field2_rrdy,
	input      [2:0]  rs_reg1_field3_wdat,
	input             rs_reg1_field3_wvld,
	output            rs_reg1_field3_wrdy,
	output     [2:0]  rs_reg1_field3_rdat,
	output            rs_reg1_field3_rvld,
	input             rs_reg1_field3_rrdy,
	input      [3:0]  rs_reg1_field4_wdat,
	input             rs_reg1_field4_wvld,
	output            rs_reg1_field4_wrdy,
	output     [3:0]  rs_reg1_field4_rdat,
	output            rs_reg1_field4_rvld,
	input             rs_reg1_field4_rrdy,
	output reg        p_wready           );

	//Wire define for this module.
	reg [0:0] p_ready_r;

	//Wire define for sub module.
	wire [31:0] rs_wreq_data;
	wire        rs_wreq_vld ;
	wire        u_p_wready  ;

	//Wire define for Inout.

	//Wire sub module connect to this module and inter module connect.
	assign p_ready = p_ready_r;
	
	assign p_rdata = 32'b0;
	
	assign p_slverr = 1'b0;
	
	always @(posedge clk or negedge rst_n) begin
	    if(~rst_n) p_ready_r <= 1'b0;
	    else begin
	        if((1'b0 || p_wready)) p_ready_r <= 1'b1;
	        else p_ready_r <= 1'b0;
	    end
	end
	
	always @(*) begin
	    if((wreq_addr == 32'b0)) p_wready = reg0_wrdy;
	    else if((wreq_addr == 32'b100000)) p_wready = reg1_wrdy;
	    else p_wready = 1'b0;
	end
	

	//Wire this module connect to sub module.
	assign rs_clk = clk;
	
	assign rs_rst_n = rst_n;
	
	assign rs_wreq_data = {(p_wdata[7:0] & {p_strb[0:0], p_strb[0:0], p_strb[0:0], p_strb[0:0], p_strb[0:0], p_strb[0:0], p_strb[0:0], p_strb[0:0]}), (p_wdata[15:8] & {p_strb[1:1], p_strb[1:1], p_strb[1:1], p_strb[1:1], p_strb[1:1], p_strb[1:1], p_strb[1:1], p_strb[1:1]}), (p_wdata[23:16] & {p_strb[2:2], p_strb[2:2], p_strb[2:2], p_strb[2:2], p_strb[2:2], p_strb[2:2], p_strb[2:2], p_strb[2:2]}), (p_wdata[31:24] & {p_strb[3:3], p_strb[3:3], p_strb[3:3], p_strb[3:3], p_strb[3:3], p_strb[3:3], p_strb[3:3], p_strb[3:3]})};
	
	assign rs_wreq_vld = (p_write && p_sel && p_enable);
	

	//module inst.
	RegSpaceBase_cfg_reg_bank_C rs (
		.clk(rs_clk),
		.rst_n(rs_rst_n),
		.wreq_addr(p_addr),
		.wreq_data(rs_wreq_data),
		.wreq_vld(rs_wreq_vld),
		.p_wready(u_p_wready),
		.reg0_field1_wdat(rs_reg0_field1_wdat),
		.reg0_field1_wvld(rs_reg0_field1_wvld),
		.reg0_field1_wrdy(rs_reg0_field1_wrdy),
		.reg0_field1_rdat(rs_reg0_field1_rdat),
		.reg0_field1_rvld(rs_reg0_field1_rvld),
		.reg0_field1_rrdy(rs_reg0_field1_rrdy),
		.reg0_field2_wdat(rs_reg0_field2_wdat),
		.reg0_field2_wvld(rs_reg0_field2_wvld),
		.reg0_field2_wrdy(rs_reg0_field2_wrdy),
		.reg0_field2_rdat(rs_reg0_field2_rdat),
		.reg0_field2_rvld(rs_reg0_field2_rvld),
		.reg0_field2_rrdy(rs_reg0_field2_rrdy),
		.reg0_field3_wdat(rs_reg0_field3_wdat),
		.reg0_field3_wvld(rs_reg0_field3_wvld),
		.reg0_field3_wrdy(rs_reg0_field3_wrdy),
		.reg0_field3_rdat(rs_reg0_field3_rdat),
		.reg0_field3_rvld(rs_reg0_field3_rvld),
		.reg0_field3_rrdy(rs_reg0_field3_rrdy),
		.reg0_field4_wdat(rs_reg0_field4_wdat),
		.reg0_field4_wvld(rs_reg0_field4_wvld),
		.reg0_field4_wrdy(rs_reg0_field4_wrdy),
		.reg0_field4_rdat(rs_reg0_field4_rdat),
		.reg0_field4_rvld(rs_reg0_field4_rvld),
		.reg0_field4_rrdy(rs_reg0_field4_rrdy),
		.reg1_field1_wdat(rs_reg1_field1_wdat),
		.reg1_field1_wvld(rs_reg1_field1_wvld),
		.reg1_field1_wrdy(rs_reg1_field1_wrdy),
		.reg1_field1_rdat(rs_reg1_field1_rdat),
		.reg1_field1_rvld(rs_reg1_field1_rvld),
		.reg1_field1_rrdy(rs_reg1_field1_rrdy),
		.reg1_field2_wdat(rs_reg1_field2_wdat),
		.reg1_field2_wvld(rs_reg1_field2_wvld),
		.reg1_field2_wrdy(rs_reg1_field2_wrdy),
		.reg1_field2_rdat(rs_reg1_field2_rdat),
		.reg1_field2_rvld(rs_reg1_field2_rvld),
		.reg1_field2_rrdy(rs_reg1_field2_rrdy),
		.reg1_field3_wdat(rs_reg1_field3_wdat),
		.reg1_field3_wvld(rs_reg1_field3_wvld),
		.reg1_field3_wrdy(rs_reg1_field3_wrdy),
		.reg1_field3_rdat(rs_reg1_field3_rdat),
		.reg1_field3_rvld(rs_reg1_field3_rvld),
		.reg1_field3_rrdy(rs_reg1_field3_rrdy),
		.reg1_field4_wdat(rs_reg1_field4_wdat),
		.reg1_field4_wvld(rs_reg1_field4_wvld),
		.reg1_field4_wrdy(rs_reg1_field4_wrdy),
		.reg1_field4_rdat(rs_reg1_field4_rdat),
		.reg1_field4_rvld(rs_reg1_field4_rvld),
		.reg1_field4_rrdy(rs_reg1_field4_rrdy));

endmodule
//[UHDL]Content End [md5:1d0e79dff24f085e1d821b1aaccb7a4c]

//[UHDL]Parameter Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Parameter End [md5:d41d8cd98f00b204e9800998ecf8427e]

